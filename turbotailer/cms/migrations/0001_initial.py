# Generated by Django 4.2.8 on 2023-12-26 12:54

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import wagtail.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtail.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("wagtailcore", "0089_log_entry_data_json_null_to_object"),
        ("wagtailimages", "0025_alter_image_file_alter_rendition_file"),
    ]

    operations = [
        migrations.CreateModel(
            name="Review",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("content", models.TextField()),
                (
                    "rating",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ]
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="StandardPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "heading_block",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "heading_text",
                                            wagtail.blocks.CharBlock(form_classname="title", required=True),
                                        ),
                                        (
                                            "size",
                                            wagtail.blocks.ChoiceBlock(
                                                blank=True,
                                                choices=[
                                                    ("", "Select a header size"),
                                                    ("h2", "H2"),
                                                    ("h3", "H3"),
                                                    ("h4", "H4"),
                                                ],
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "paragraph_block",
                                wagtail.blocks.RichTextBlock(icon="pilcrow", template="blocks/paragraph_block.html"),
                            ),
                            (
                                "image_block",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("image", wagtail.images.blocks.ImageChooserBlock(required=True)),
                                        ("caption", wagtail.blocks.CharBlock(required=False)),
                                    ]
                                ),
                            ),
                            (
                                "block_quote",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("text", wagtail.blocks.TextBlock()),
                                        (
                                            "attribute_name",
                                            wagtail.blocks.CharBlock(
                                                blank=True, label="e.g. Mary Berry", required=False
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "accordion_block",
                                wagtail.blocks.StreamBlock(
                                    [
                                        (
                                            "accordion_item",
                                            wagtail.blocks.StructBlock(
                                                [
                                                    (
                                                        "title",
                                                        wagtail.blocks.CharBlock(
                                                            help_text="Add your title", required=True
                                                        ),
                                                    ),
                                                    (
                                                        "content",
                                                        wagtail.blocks.RichTextBlock(
                                                            help_text="Add your content", required=True
                                                        ),
                                                    ),
                                                ]
                                            ),
                                        )
                                    ],
                                    label_format="FAQ (Accordion)",
                                ),
                            ),
                            (
                                "hero_block",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.RawHTMLBlock(help_text="Add your title", required=True),
                                        ),
                                        (
                                            "sub_title",
                                            wagtail.blocks.CharBlock(help_text="Add your sub title", required=False),
                                        ),
                                        ("image", wagtail.images.blocks.ImageChooserBlock(required=True)),
                                        (
                                            "buttons",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.StructBlock(
                                                    [
                                                        (
                                                            "title",
                                                            wagtail.blocks.CharBlock(
                                                                help_text="Button display text", required=False
                                                            ),
                                                        ),
                                                        (
                                                            "page_link",
                                                            wagtail.blocks.PageChooserBlock(
                                                                help_text="Select an internal page to link to",
                                                                required=False,
                                                            ),
                                                        ),
                                                        (
                                                            "anchor",
                                                            wagtail.blocks.CharBlock(
                                                                help_text="Link to a anchor on the same page",
                                                                required=False,
                                                            ),
                                                        ),
                                                        (
                                                            "open_modal",
                                                            wagtail.blocks.BooleanBlock(
                                                                help_text="Open form modal", required=False
                                                            ),
                                                        ),
                                                        (
                                                            "style",
                                                            wagtail.blocks.ChoiceBlock(
                                                                blank=False,
                                                                choices=[
                                                                    ("", "Select a style"),
                                                                    ("primary", "Primary"),
                                                                    ("secondary", "Secondary"),
                                                                    ("light", "Light"),
                                                                    ("dark", "Dark"),
                                                                ],
                                                                required=False,
                                                            ),
                                                        ),
                                                        (
                                                            "outline",
                                                            wagtail.blocks.BooleanBlock(
                                                                help_text="Make the button outline?", required=False
                                                            ),
                                                        ),
                                                    ],
                                                    required=False,
                                                )
                                            ),
                                        ),
                                        (
                                            "usps",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.StructBlock(
                                                    [
                                                        (
                                                            "text",
                                                            wagtail.blocks.CharBlock(
                                                                help_text="USP text", required=False
                                                            ),
                                                        )
                                                    ],
                                                    required=False,
                                                )
                                            ),
                                        ),
                                        (
                                            "full_width",
                                            wagtail.blocks.BooleanBlock(
                                                help_text="Make hero full width", required=False
                                            ),
                                        ),
                                    ],
                                    label_format="Hero",
                                ),
                            ),
                            (
                                "review_block",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "max_count",
                                            wagtail.blocks.IntegerBlock(
                                                default=10,
                                                help_text="Maximum number of reviews to display",
                                                required=False,
                                            ),
                                        )
                                    ],
                                    label_format="Reviews",
                                ),
                            ),
                            (
                                "services_block",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("title", wagtail.blocks.CharBlock(help_text="Add your title", required=True)),
                                        (
                                            "services",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.StructBlock(
                                                    [
                                                        (
                                                            "title",
                                                            wagtail.blocks.CharBlock(
                                                                help_text="Add your title, default to 'Your services'",
                                                                required=False,
                                                            ),
                                                        ),
                                                        (
                                                            "image",
                                                            wagtail.images.blocks.ImageChooserBlock(required=True),
                                                        ),
                                                        (
                                                            "page_link",
                                                            wagtail.blocks.PageChooserBlock(
                                                                help_text="Select an internal page to link to",
                                                                required=False,
                                                            ),
                                                        ),
                                                    ]
                                                )
                                            ),
                                        ),
                                    ],
                                    label_format="Services",
                                ),
                            ),
                            (
                                "text_image_block",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "subtitle",
                                            wagtail.blocks.CharBlock(help_text="Add your subtitle", required=False),
                                        ),
                                        ("title", wagtail.blocks.CharBlock(help_text="Add your title", required=True)),
                                        (
                                            "text",
                                            wagtail.blocks.RichTextBlock(help_text="Add your text", required=True),
                                        ),
                                        ("image", wagtail.images.blocks.ImageChooserBlock(required=False)),
                                        (
                                            "embed",
                                            wagtail.embeds.blocks.EmbedBlock(
                                                help_text="Insert an embed URL e.g https://www.youtube.com/watch?v=SGJFWirQ3ks",
                                                icon="media",
                                                max_height=400,
                                                max_width=800,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "buttons",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.StructBlock(
                                                    [
                                                        (
                                                            "title",
                                                            wagtail.blocks.CharBlock(
                                                                help_text="Button display text", required=False
                                                            ),
                                                        ),
                                                        (
                                                            "page_link",
                                                            wagtail.blocks.PageChooserBlock(
                                                                help_text="Select an internal page to link to",
                                                                required=False,
                                                            ),
                                                        ),
                                                        (
                                                            "anchor",
                                                            wagtail.blocks.CharBlock(
                                                                help_text="Link to a anchor on the same page",
                                                                required=False,
                                                            ),
                                                        ),
                                                        (
                                                            "open_modal",
                                                            wagtail.blocks.BooleanBlock(
                                                                help_text="Open form modal", required=False
                                                            ),
                                                        ),
                                                        (
                                                            "style",
                                                            wagtail.blocks.ChoiceBlock(
                                                                blank=False,
                                                                choices=[
                                                                    ("", "Select a style"),
                                                                    ("primary", "Primary"),
                                                                    ("secondary", "Secondary"),
                                                                    ("light", "Light"),
                                                                    ("dark", "Dark"),
                                                                ],
                                                                required=False,
                                                            ),
                                                        ),
                                                        (
                                                            "outline",
                                                            wagtail.blocks.BooleanBlock(
                                                                help_text="Make the button outline?", required=False
                                                            ),
                                                        ),
                                                    ],
                                                    required=True,
                                                )
                                            ),
                                        ),
                                        (
                                            "reverse",
                                            wagtail.blocks.BooleanBlock(
                                                help_text="Reverse the order of text and image", required=False
                                            ),
                                        ),
                                        (
                                            "shadow",
                                            wagtail.blocks.BooleanBlock(
                                                help_text="Add a shadow to image", required=False
                                            ),
                                        ),
                                    ],
                                    label_format="Text & Image",
                                ),
                            ),
                            (
                                "page_list_block",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("title", wagtail.blocks.CharBlock(help_text="Add your title", required=True)),
                                        ("text", wagtail.blocks.TextBlock(help_text="Add your text", required=False)),
                                        (
                                            "pages",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.StructBlock(
                                                    [
                                                        (
                                                            "title",
                                                            wagtail.blocks.CharBlock(
                                                                help_text="Add your title", required=True
                                                            ),
                                                        ),
                                                        ("page", wagtail.blocks.PageChooserBlock(required=False)),
                                                    ]
                                                )
                                            ),
                                        ),
                                    ],
                                    label_format="List with pages",
                                ),
                            ),
                            (
                                "highlight_block",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("title", wagtail.blocks.CharBlock(help_text="Add your title", required=True)),
                                        (
                                            "button",
                                            wagtail.blocks.StructBlock(
                                                [
                                                    (
                                                        "title",
                                                        wagtail.blocks.CharBlock(
                                                            help_text="Button display text", required=False
                                                        ),
                                                    ),
                                                    (
                                                        "page_link",
                                                        wagtail.blocks.PageChooserBlock(
                                                            help_text="Select an internal page to link to",
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        "anchor",
                                                        wagtail.blocks.CharBlock(
                                                            help_text="Link to a anchor on the same page",
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        "open_modal",
                                                        wagtail.blocks.BooleanBlock(
                                                            help_text="Open form modal", required=False
                                                        ),
                                                    ),
                                                    (
                                                        "style",
                                                        wagtail.blocks.ChoiceBlock(
                                                            blank=False,
                                                            choices=[
                                                                ("", "Select a style"),
                                                                ("primary", "Primary"),
                                                                ("secondary", "Secondary"),
                                                                ("light", "Light"),
                                                                ("dark", "Dark"),
                                                            ],
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        "outline",
                                                        wagtail.blocks.BooleanBlock(
                                                            help_text="Make the button outline?", required=False
                                                        ),
                                                    ),
                                                ],
                                                required=True,
                                            ),
                                        ),
                                    ],
                                    label_format="Highlight",
                                ),
                            ),
                            (
                                "anchor_block",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "anchor_tag",
                                            wagtail.blocks.CharBlock(
                                                help_text="Write a tag you remember", required=False
                                            ),
                                        )
                                    ],
                                    label_format="Anchor",
                                ),
                            ),
                            (
                                "empty_space",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "background_color",
                                            wagtail.blocks.BooleanBlock(
                                                help_text="Add background color", required=False
                                            ),
                                        )
                                    ],
                                    label_format="Empty Space",
                                ),
                            ),
                        ],
                        blank=True,
                        use_json_field=True,
                        verbose_name="Page body",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True, help_text="Restrict access to this page by role", max_length=50, null=True
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="SiteInfo",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("phone", models.CharField(max_length=20)),
                ("email", models.EmailField(max_length=254)),
                ("company_name", models.CharField(max_length=255)),
                ("address", models.TextField()),
                ("google_analytics", models.CharField(blank=True, max_length=20, null=True)),
                ("tag_manager", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "company_favicon",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "company_logo",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "site",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="custom_site_info",
                        to="wagtailcore.site",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FooterText",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("live", models.BooleanField(default=True, editable=False, verbose_name="live")),
                (
                    "has_unpublished_changes",
                    models.BooleanField(default=False, editable=False, verbose_name="has unpublished changes"),
                ),
                (
                    "first_published_at",
                    models.DateTimeField(blank=True, db_index=True, null=True, verbose_name="first published at"),
                ),
                (
                    "last_published_at",
                    models.DateTimeField(editable=False, null=True, verbose_name="last published at"),
                ),
                ("go_live_at", models.DateTimeField(blank=True, null=True, verbose_name="go live date/time")),
                ("expire_at", models.DateTimeField(blank=True, null=True, verbose_name="expiry date/time")),
                ("expired", models.BooleanField(default=False, editable=False, verbose_name="expired")),
                ("body", wagtail.fields.RichTextField()),
                (
                    "footer_columns",
                    wagtail.fields.StreamField(
                        [
                            (
                                "column",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("heading", wagtail.blocks.CharBlock(max_length=50, required=False)),
                                        (
                                            "links",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.StructBlock(
                                                    [
                                                        (
                                                            "title",
                                                            wagtail.blocks.CharBlock(max_length=50, required=True),
                                                        ),
                                                        ("page", wagtail.blocks.PageChooserBlock(required=False)),
                                                    ]
                                                )
                                            ),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        null=True,
                        use_json_field=True,
                        verbose_name="Footer columns",
                    ),
                ),
                (
                    "latest_revision",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailcore.revision",
                        verbose_name="latest revision",
                    ),
                ),
                (
                    "live_revision",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailcore.revision",
                        verbose_name="live revision",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(wagtail.models.PreviewableMixin, models.Model),
        ),
    ]
